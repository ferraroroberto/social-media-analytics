# Content Performance Predictor Configuration

# Data Configuration
data:
  supabase:
    url: ${SUPABASE_URL}
    key: ${SUPABASE_KEY}
    service_role_key: ${SUPABASE_SERVICE_ROLE_KEY}
  
  platforms:
    - linkedin
    - instagram
    - twitter
    - substack
    - threads
  
  content_types:
    - no_video
    - video

# Model Configuration
models:
  types:
    - random_forest
    - xgboost
    - lightgbm
    - catboost
    - linear_regression
    - ridge
    - svr
    - mlp
  
  default_params:
    random_forest:
      n_estimators: 100
      max_depth: 10
      random_state: 42
      n_jobs: -1
    
    xgboost:
      n_estimators: 100
      max_depth: 6
      learning_rate: 0.1
      random_state: 42
      n_jobs: -1
    
    lightgbm:
      n_estimators: 100
      max_depth: 6
      learning_rate: 0.1
      random_state: 42
      n_jobs: -1
    
    catboost:
      iterations: 100
      depth: 6
      learning_rate: 0.1
      random_state: 42
      verbose: false

# Feature Engineering Configuration
features:
  temporal:
    lags: [1, 3, 7, 14, 30]
    window_sizes: [7, 14, 30]
  
  scaling:
    method: standard  # standard, minmax
  
  importance_threshold: 0.01

# API Configuration
api:
  host: ${API_HOST:-0.0.0.0}
  port: ${API_PORT:-8000}
  reload: ${API_RELOAD:-true}
  cors_origins: ["*"]

# Dashboard Configuration
dashboard:
  host: ${DASHBOARD_HOST:-0.0.0.0}
  port: ${DASHBOARD_PORT:-8050}
  debug: ${DASHBOARD_DEBUG:-true}

# MLflow Configuration
mlflow:
  tracking_uri: ${MLFLOW_TRACKING_URI:-http://localhost:5000}
  experiment_name: ${MLFLOW_EXPERIMENT_NAME:-content-performance-predictor}

# Logging Configuration
logging:
  level: ${LOG_LEVEL:-INFO}
  file: ${LOG_FILE:-./logs/app.log}
  format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"

# Paths
paths:
  models: ${MODEL_PATH:-./models}
  data: ${DATA_PATH:-./data}
  features: ${FEATURE_STORE_PATH:-./data/features}
  experiments: ${EXPERIMENT_PATH:-./mlflow}
  logs: ${LOG_PATH:-./logs}